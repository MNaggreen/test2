"use strict";
const arr = [1, 2, 3, 6, 8];
const val = arr;
console.log(val.length);
/* 5 длина массива определяется по номеру последнего его индекса + 1 */
val[99] = 0;
console.log(val.length);
console.log(val);
/* 100 так как последний элемент имеет индекс 99 */
/* [ 1, 2, 3, 6, 8, <94 empty items>, 0 ] */


arr.pop();
/* удляет из массива последний элемент */
console.log(arr);
/* [ 1, 2, 3, 6 ] */

arr.push(10);
/* добавляетэлемент в конец массива */

/* есть также arr.shift и arr.unshift
которые удаляют и добавляют элементы сначала
массива такой метож редко используют т.к. он
менят порядок содержимого массива */

for(let i = 0; i < arr.length; i++) {
    console.log(arr[i]);
}
/* 
1
2
3
6
10 */

for (let value of arr) {
    console.log(value);
}
/* единственный плюс данного метода это использование
break и continue */
/* 
1
2
3
6
10
данный способо рекомендуется использовать для
перебора элементов массива 
также, такая конструкция работает только с массивами и
 псевдомассивами(строки)*/

const arr2 = [1, 2, 3, 5, 8];
arr2.forEach(function(item, i, arr2) {
    console.log(`${i}: ${item} внутри массива ${arr2}`);
});
/* данный метод работает так же как и 
методы перебора выше
его отличие в способах настройки */

/* для каждого элемента масива
будет выпполняться данная функция
коллбек функция 
первое аргумент который мы сейчас перебираем
второй аргумент это элемент по порядку
третье сам массив */
/* 
0: 1 внутри массива 1,2,3,5,8
1: 2 внутри массива 1,2,3,5,8
2: 3 внутри массива 1,2,3,5,8
3: 5 внутри массива 1,2,3,5,8
4: 8 внутри массива 1,2,3,5,8 */


const str = prompt("", "");
const products = str.split(", ");/* создание массива с запятой */
console.log(products);
/* [asdas, asdas, asdas] */
console.log(products.join("; "));
/* asdas; asdas; asdas; это строка! */
console.log(products.sort());/* по умолчанию сортировка происходит по
строчным параметрм т.е. такой массив 10 13 2 8 будем нормой
для этого нужно задавать коллбек функцию для метода sort */
/* aaa, bbb, ccc */


console.log(products.sort(compareNum));
function compareNum(a, b) {
    return a - b;
}
/* и тогда числа отсортируються 2 8 10 13 */



/* что такое псевдомассивы
псевдомассивы выглядят также как и масивы
но не имеют никаких методов */