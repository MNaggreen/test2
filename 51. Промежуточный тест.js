/* 
Question 1:
Какой из вариантов получения этого элемента со страницы будет 
правильным?

<div id="hi">Hello</div>
document.querySelector('#hi')



Question 2:
В чем разница между обычными массивами и псевдомассивами, 
которые мы получаем при использовании методов getElementsByClassName, 
getElementsByName и тп?

У псевдомассивов нет обычных массиовов, таких как push, pop и т.д.



Question 3:
Какое событие отвечает за отправку формы со страницы?

'submit'




Question 4:
Что такое объект события?

Это объект содержащий всю информацию о произошедшем событии




Question 5:
Как отменить стандартное поведение браузера при работе 
со ссылками, формами и тп?


event.preventDefault()





Question 6:
Будет ли соблюдаться порядок выполнения скриптов, если их подключить вот так?

<script defer src="bigscript.js"></script>
<script defer src="smallscript.js"></script>

Да порядок будет соблюдаться







Question 7:
В чем разница между nextSibling и nextElementSibling?

nextElementSibling получает только элементы без текстовых узлов






Question 8:
Для чего существуют data-атрибуты? ПОВТОРИТЬ 45

Для удобного ориентирования в элементах по их значению при помощи JS это как чекпоинты 





Question 9:
Какой из команд можно создать элемент на странице?

document.createElement('div');





Question 10:
Какой командой можно удалить элемент со страницы?

div.remove()





Question 11:
При получении псевдомассива элементов через метод 
querySelectorAll у него доступен такой метод как...

forEach()



Question 12:
Какой из методов безопаснее всего использовать, если мы четко хотим получить 
от пользователя текст и использовать его дальше?

textContent



Question 13:
В чем ошибка при использовании такого кода?

document.querySelector('someClass')


нет точки






Question 14:
Как определить тип произошедшего события в обработчике?

event.type


Question 15:
Какого события не существует на странице?

closePage
































*/