function calculateVolumeAndArea(intg) {
    if (intg > 0) {
    const volume = (intg * intg) * intg;
    const scuare = (intg * intg) * 6;
    console.log(`–û–±—ä–µ–º –∫—É–±–∞: ${volume}, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: ${scuare}`);
    } else {
        console.log('–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
    }
}

calculateVolumeAndArea(5) ;
/* –û–±—ä–µ–º –∫—É–±–∞: 125, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: 150 */



function getCoupeNumber(intp) {
    const wagon = [0, 1, 5, 9, 13, 17, 21, 25, 29, 33, 37];
    const num = intp;
    let ans = 0;
    if (typeof(num) === "string" || Number.isInteger(num) === false) {
        console.log("–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞");
    } else if (num > 0 && num < 37) {
        for (let i = 0; i < wagon.length + 1; i++) {
            if (wagon[i] <= num && wagon[i+1] > num) {
                ans = i; 
                console.log(ans);      
            }
        }       
    } else {
        console.log("–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
    }
}
getCoupeNumber(30.8);


console.log(Number.isInteger(3.4));


/* (*) –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π
–í —ç—Ç–∏—Ö –∑–∞–¥–∞—á–∞—Ö –º—ã —É–∂–µ —É—Å–ª–æ–∂–Ω–∏–º —Ä–∞–±–æ—Ç—É —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏. –û–Ω–∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –∏ —Ç—É—Ç –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã.

–£—á—Ç–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –≤ —Ç–∞–∫–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —á–µ—Ä–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º—É. –ü–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ —á–µ—Ç–∫–æ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.

–í—ã –º–æ–∂–µ—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Ä–µ—à–∏—Ç—å —É —Å–µ–±—è –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∫–æ–¥–∞, –∞ –ø–æ—Ç–æ–º –≤—Å—Ç–∞–≤–∏—Ç—å —Å—é–¥–∞.

–ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ, –Ω–æ –ø–æ –ø–æ—Ä—è–¥–∫—É, —Ç–∞–∫ —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ.

–ó–∞–¥–∞—á–∏:

1) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã—á–∏—Å–ª—è—Ç—å –æ–±—ä–µ–º –∏ –ø–ª–æ—â–∞–¥—å –ø–æ–ª–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∫—É–±–∞ (—Ç–æ–∂–µ –±–∞–∑–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –∏–Ω–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π). –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –¥–ª–∏–Ω—ã —Ä–µ–±—Ä–∞ –∫—É–±–∞. –û—Ç–≤–µ—Ç –≤—ã–≤–µ–¥–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö.

–ï—Å–ª–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ø–∞–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –∏–ª–∏ –≤—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ - –≤–µ—Ä–Ω—É—Ç—å —Å—Ç—Ä–æ–∫—É "–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞"

–ù–ï –ò–°–ü–û–õ–¨–ó–£–ô–¢–ï –û–ü–ï–†–ê–¢–û–† –°–¢–ï–ü–ï–ù–ò ** - –≤ –æ–Ω–ª–∞–π–Ω —Å—Ä–µ–¥–µ –±—Ä–∞—É–∑–µ—Ä–∞ –æ–Ω –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ —Ç–µ—Å—Ç—ã –±—É–¥—É—Ç –ª–æ–º–∞—Ç—å—Å—è. –≠—Ç–æ –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ —ç—Ç–æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–∑ –±–æ–ª–µ–µ –Ω–æ–≤–æ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞, —á–µ–º —Ç—É—Ç –¥–æ—Å—Ç—É–ø–µ–Ω.

–ü—Ä–∏–º–µ—Ä—ã:

calculateVolumeAndArea(5)  => '–û–±—ä–µ–º –∫—É–±–∞: 125, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: 150'

calculateVolumeAndArea(15)  => '–û–±—ä–µ–º –∫—É–±–∞: 3375, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: 1350'

calculateVolumeAndArea(15.5)  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'

calculateVolumeAndArea('15')  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'

calculateVolumeAndArea(-15)  => '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞'

2) –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –±–æ–ª–µ–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º –∑–∞–¥–∞—á–∞–º :) –í—ã –æ–±–Ω–∞—Ä—É–∂–∏—Ç–µ, —á—Ç–æ —Ç–∞–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤—Å–µ —Ç–æ–∂–µ —Å–∞–º–æ–µ.

–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –Ω–æ–º–µ—Ä –∫—É–ø–µ –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –µ–π –Ω–æ–º–µ—Ä—É –º–µ—Å—Ç–∞. –ù–∞–≥–ª—è–¥–Ω–æ: */

/* –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 36.

–ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —á–∏—Å–ª–æ, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∏–ª–∏ –¥—Ä–æ–±–Ω–æ–µ - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ:

"–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

–ï—Å–ª–∏ —á–∏—Å–ª–æ 0 –∏–ª–∏ –±–æ–ª—å—à–µ 36, —Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

–ü—Ä–∏–º–µ—Ä:

getCoupeNumber(33)  => 9

getCoupeNumber(7)  => 2

getCoupeNumber(300)  => "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

getCoupeNumber(0)  => "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"

getCoupeNumber(7.7)  => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

getCoupeNumber(-10)  => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

getCoupeNumber('Hello')  => "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞"

–¢–∞–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–ø–æ–ª–Ω–µ —Ä–µ–∞–ª—å–Ω–∞ –∏ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –±–∏–ª–µ—Ç–æ–≤, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ –Ω–∞ —Å–∞–π—Ç–∞—Ö. –ö–æ–Ω–µ—á–Ω–æ, —Ç–∞–º –±—É–¥–µ—Ç –∫—É–¥–∞ –±–æ–ª—å—à–µ —É—Å–ª–æ–≤–∏–π, –Ω–æ —Å–º—ã—Å–ª –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–∏–º –∂–µ.

–û—Ç–≤–µ—Ç —Å –∫–æ–¥–æ–º —ç—Ç–∏—Ö –∑–∞–¥–∞—á –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç: —Å—Å—ã–ª–∫–∞

–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ –¥—Ä—É–≥–æ–º—É, –Ω–æ —Ä–µ—à–µ–Ω–∏–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è - —Ç–æ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è –≤—Å–µ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ.

–ù–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ä–µ—à–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üôÇ */



// –ú–µ—Å—Ç–æ –¥–ª—è –ø–µ—Ä–≤–æ–π –∑–∞–¥–∞—á–∏
function calculateVolumeAndArea(intg) {
    if (intg > 0 && Number.isInteger(intg)) {
    const volume = (intg * intg) * intg;
    const scuare = (intg * intg) * 6;
    return `–û–±—ä–µ–º –∫—É–±–∞: ${volume}, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏: ${scuare}`;
    } else {
        return '–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞';
    }
}
    
    



// –ú–µ—Å—Ç–æ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∑–∞–¥–∞—á–∏
function getCoupeNumber(intp) {
    const wagon = [0, 1, 5, 9, 13, 17, 21, 25, 29, 33, 37];
    const num = intp;
    let ans = 0;
    if (typeof(num) === "string" || Number.isInteger(num) === false || num < 0) {
        return "–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞";
    } else if (num > 0 && num < 37) {
        for (let i = 0; i < wagon.length + 1; i++) {
         if (wagon[i] <= num && wagon[i+1] > num) {
                ans = i; 
                return ans;
         }
         }
    } else {
        return "–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç";
    }
}



function afterDecimal(num) {
    if (Number.isInteger(num)) {
      return 0;
    }
    const ans = num.toString().split('.')[1];
    /* —Å–æ–∑–¥–∞–µ–º—Å–ø–∏—Å–æ–∫ –∏–∑ –º–∏—á–ª–∞ –∏ –ø–µ—Ä–µ–¥–µ–ª—ã–≤–µ–º –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É */
    return parseInt(ans);
}

console.log(typeof(afterDecimal(1.123)));


let a = '53';
console.log(a.slice(1, 2));

let inf = 50.1;
let res = inf.toString()
console.log(res);





/* –í —ç—Ç–∏—Ö –∑–∞–¥–∞—á–∞—Ö –º—ã —É–∂–µ —É—Å–ª–æ–∂–Ω–∏–º —Ä–∞–±–æ—Ç—É —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏. –û–Ω–∏ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –∏ —Ç—É—Ç –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã.

–£—á—Ç–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –≤ —Ç–∞–∫–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —á–µ—Ä–µ–∑ –ø—Ä–æ–≥—Ä–∞–º–º—É. –ü–æ—ç—Ç–æ–º—É –Ω—É–∂–Ω–æ —á–µ—Ç–∫–æ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.

–í—ã –º–æ–∂–µ—Ç–µ —Å–Ω–∞—á–∞–ª–∞ —Ä–µ—à–∏—Ç—å —É —Å–µ–±—è –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ –∫–æ–¥–∞, –∞ –ø–æ—Ç–æ–º –≤—Å—Ç–∞–≤–∏—Ç—å —Å—é–¥–∞.

–ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ, –Ω–æ –ø–æ –ø–æ—Ä—è–¥–∫—É, —Ç–∞–∫ —á—Ç–æ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ.

–ó–∞–¥–∞—á–∏:

1) –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –º–∏–Ω—É—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–æ–∫–∏. (–°–º–æ—Ç—Ä–∏ –ø—Ä–∏–º–µ—Ä). –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Å–ª–æ–≤–∞ "—á–∞—Å" - –æ–Ω–æ –º–µ–Ω—è–µ—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ü–∏—Ñ—Ä—ã. –ï—Å–ª–∏ –≤–º–µ—Å—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –ø—Ä–∏—Ö–æ–¥–∏—Ç –Ω–µ —á–∏—Å–ª–æ, –¥—Ä–æ–±–Ω–æ–µ –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ - —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ"

–í–Ω–∏–º–∞–Ω–∏–µ! –î–∞–≤–∞–π—Ç–µ –ø–æ–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–∏–º—Å—è –º–∞–∫—Å–∏–º—É–º 600—é –º–∏–Ω—É—Ç–∞–º–∏ (10 —á–∞—Å–æ–≤). –¢–∞–∫ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –±–æ–ª—å—à–∏–µ —á–∏—Å–ª–∞ –±—É–¥—É—Ç —Ä–∞–∑–¥—É–≤–∞—Ç—å –∫–æ–¥ (33 —á–∞—Å–∞, 31 —á–∞—Å, 11 —á–∞—Å–æ–≤ –∏ —Ç–¥). –≠—Ç–æ–≥–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏ –∫–æ–¥ –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ (1 - 10 —á–∞—Å–æ–≤). –ù–æ –≤—ã –º–æ–∂–µ—Ç–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∏ –ø–æ–ª–Ω—ã–π —Å–∫—Ä–∏–ø—Ç, –æ–Ω —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —Ç–µ—Å—Ç—ã.

–ü—Ä–∏–º–µ—Ä:

getTimeFromMinutes(150) => "–≠—Ç–æ 2 —á–∞—Å–∞ –∏ 30 –º–∏–Ω—É—Ç"

getTimeFromMinutes(50) => "–≠—Ç–æ 0 —á–∞—Å–æ–≤ –∏ 50 –º–∏–Ω—É—Ç"

getTimeFromMinutes(0) => "–≠—Ç–æ 0 —á–∞—Å–æ–≤ –∏ 0 –º–∏–Ω—É—Ç"

getTimeFromMinutes(-150) => "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ"

2) –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ —Å–µ–±—è 4 —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–µ–µ –∏–∑ –Ω–∏—Ö. –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º –∏–ª–∏ –∏—Ö –º–µ–Ω—å—à–µ 4 - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 0. –î—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã.

–ü—Ä–∏–º–µ—Ä:

findMaxNumber(1, 5, 6.6, 11); =>  11

findMaxNumber(1, 5, '6', '10');  =>  0

–£ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –µ—Å—Ç—å –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è, –≤ —Ç–æ–º —á–∏—Å–ª–µ –∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –≤ JS. –ü–æ–¥—Ö–æ–¥–∏—Ç –ª—é–±–æ–µ :)

–û—Ç–≤–µ—Ç —Å –∫–æ–¥–æ–º —ç—Ç–∏—Ö –∑–∞–¥–∞—á –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç: —Å—Å—ã–ª–∫–∞

–ï—Å–ª–∏ —É –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –Ω–µ–º–Ω–æ–≥–æ –ø–æ –¥—Ä—É–≥–æ–º—É, –Ω–æ —Ä–µ—à–µ–Ω–∏–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è - —Ç–æ –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è –≤—Å–µ–≥–¥–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ.

–ù–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ä–µ—à–∏—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ üôÇ

 */
function getTimeFromMinutes(num) {
    let minute = 0;
    let minuteFloor;
    /* let res = ''; */
    let inf = num;
    let res = inf.toString().split('.');    
    let min = '';
    let hour = 0;
    let lastmin = 0;
    let ans = ''; 
    if (num < 0 || res.length > 1) {        
        return '–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ'; 
    } if (num <= 60) {
        if (num > 0) {
            minute = num;
            res = minute.toString().split('.');        
            min = res[0];
            lastmin = parseInt(min.slice(1, 2)); 
            lastmin = parseInt(lastmin); 
            min = parseInt(min); 
        } else {
            min = 0;
            lastmin = 0;
        }               
    } if (num > 60) {
        minute = num / 60; 
        if (minute.toString().length === 2) {
            hour = minute;
            min = 0;
            lastmin = 0;                        
        } else {
            minuteFloor =  minute - Math.floor(minute);
            res = minute.toString().split('.');  
            min = res[1].slice(0, 2);        
            hour = parseInt(res[0]); 
            lastmin = parseInt(lastmin); 
            min = parseInt(min);  
            min = minuteFloor * 60;
            min = min.toString();
            lastmin = parseInt(min.slice(1, 3));
            min = parseInt(min);
        }        
    } if (min > 60) {
        min = min - 60;
        hour += 1;
    } if (min === 60) {
        min = 0;
        hour += 1;
    } if (min < 60) {
        min = min; 
    } if (hour === 0) {
        ans = `–≠—Ç–æ ${hour} —á–∞—Å–æ–≤ `;                        
    } if (hour === 1) {
        ans = `–≠—Ç–æ ${hour} —á–∞—Å `;        
    } if (hour > 1 && hour < 5) {
        ans = `–≠—Ç–æ ${hour} —á–∞—Å–∞ `;        
    } if (hour > 5 || hour === 0) {
        ans = `–≠—Ç–æ ${hour} —á–∞—Å–æ–≤ `;        
    } if (lastmin === 1) {        
        ans += `–∏ ${min} –º–∏–Ω—É—Ç–∞`;        
    } if (lastmin > 1 && lastmin < 5) {        
        ans += `–∏ ${min} –º–∏–Ω—É—Ç—ã`;        
    } if (lastmin > 5 || lastmin === 0) {        
        ans += `–∏ ${min} –º–∏–Ω—É—Ç`;          
}
return ans;
}

console.log(getTimeFromMinutes(50.1));

console.log(Math.floor(2,5));

function findMaxNumber(...args) {    
    const ans = [...args];
    const res = [];
     
    if (ans.length < 4) {
        return 0;
    } 
    let count = 4;
    for (let i = 0; i <= ans.length-1; i++) { 
        res[i] = Math.round(ans[i]);  
        if (typeof(ans[i]) === 'string') {           
            --count;            
        }                  
    }
    if (count >= 4) {
        return Math.max(...ans); 
    } else {
        return 0;
    }    
}

console.log( findMaxNumber(1, 5, 6.6, '10', '11'));
console.log(Number.isInteger(6.6));





function fib(num) {
 let res = '0 1';
 let fib = [0, 1];
 let inf = num;
 let check = inf.toString().split('.');    
 if ( num === 0 || typeof(num) === 'string' || check.length > 1) {
    return '';
 }
 if (num  === 1) {
    return '0';
 }
 for (let i = 2; i <= num-1; i++) {
        
        fib[i] = fib[i-2] + fib[i-1];
        res += ' ' + fib[i].toString();
    }
    console.log(typeof(res));

return res;
}

console.log(fib(1.1));